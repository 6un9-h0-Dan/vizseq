(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{144:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"rightToc",(function(){return l})),a.d(t,"default",(function(){return c}));a(58),a(31),a(22),a(23),a(59),a(0);var n=a(162);function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e}).apply(this,arguments)}var i={id:"data",title:"Data",sidebar_label:"Data"},l=[{value:"Input Types",id:"input-types",children:[]},{value:"Data Types",id:"data-types",children:[]},{value:"File Formats",id:"file-formats",children:[]}],p={rightToc:l},o="wrapper";function c(e){var t=e.components,a=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,["components"]);return Object(n.b)(o,r({},p,a,{components:t,mdxType:"MDXLayout"}),Object(n.b)("h2",{id:"input-types"},"Input Types"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Source:"),Object(n.b)("li",{parentName:"ul"},"Reference:"),Object(n.b)("li",{parentName:"ul"},"Hypothesis:"),Object(n.b)("li",{parentName:"ul"},"Tags: per-example tags for example grouping. ")),Object(n.b)("h2",{id:"data-types"},"Data Types"),Object(n.b)("p",null,"VizSeq gets data from Python variables (Jupyter Notebook only) or local files. Specifically, VizSeq web app expects data\nto be organized in the following folder structure:"),Object(n.b)("pre",null,Object(n.b)("code",r({parentName:"pre"},{}),"<data_root>/<task_name>/src_*.txt\n<data_root>/<task_name>/src_*.zip\n<data_root>/<task_name>/ref_*.txt\n<data_root>/<task_name>/pred_*.txt\n<data_root>/<task_name>/tag_*.txt\n")),Object(n.b)("p",null,"where"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"src_*.txt"),": a text source, one sentence per line"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"src_*.zip"),": a packed/compressed source, with one ",Object(n.b)("inlineCode",{parentName:"li"},"source.txt")," in it which provides either the sentences or the image/audio/video filenames"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"ref_*.txt"),": a text reference, one sentence per line"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"pred_*.txt"),": a text model prediction, one sentence per line"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"tag_*.txt"),": optional, sentence-level tags, one sentence per line")),Object(n.b)("h2",{id:"file-formats"},"File Formats"),Object(n.b)("h4",{id:"text"},"Text"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"txt"),Object(n.b)("li",{parentName:"ul"},"txt in .zip")),Object(n.b)("h4",{id:"image"},"Image"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",r({parentName:"li"},{href:"https://en.wikipedia.org/wiki/JPEG"}),".jpg")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",r({parentName:"li"},{href:"https://en.wikipedia.org/wiki/Portable_Network_Graphics"}),".png")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",r({parentName:"li"},{href:"https://en.wikipedia.org/wiki/GIF"}),".gif")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",r({parentName:"li"},{href:"https://en.wikipedia.org/wiki/BMP_file_format"}),".bmp"))),Object(n.b)("h4",{id:"audio"},"Audio"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",r({parentName:"li"},{href:"https://en.wikipedia.org/wiki/MP3"}),".mp3")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",r({parentName:"li"},{href:"https://en.wikipedia.org/wiki/WAV"}),".wav"))),Object(n.b)("h4",{id:"video"},"Video"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",r({parentName:"li"},{href:"https://en.wikipedia.org/wiki/MPEG-4_Part_14"}),".mp4")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",r({parentName:"li"},{href:"https://en.wikipedia.org/wiki/WebM"}),".webm"))))}c.isMDXComponent=!0},162:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return u}));var n=a(0),r=a.n(n),i=r.a.createContext({}),l=function(e){var t=r.a.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):Object.assign({},t,e)),a},p=function(e){var t=l(e.components);return r.a.createElement(i.Provider,{value:t},e.children)};var o="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,p=e.parentName,o=function(e,t){var a={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&-1===t.indexOf(n)&&(a[n]=e[n]);return a}(e,["components","mdxType","originalType","parentName"]),b=l(a),u=n,s=b[p+"."+u]||b[u]||c[u]||i;return a?r.a.createElement(s,Object.assign({},{ref:t},o,{components:a})):r.a.createElement(s,Object.assign({},{ref:t},o))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,l=new Array(i);l[0]=b;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p[o]="string"==typeof e?e:n,l[1]=p;for(var u=2;u<i;u++)l[u]=a[u];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,a)}b.displayName="MDXCreateElement"}}]);